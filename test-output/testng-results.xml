<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="20" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-02T02:25:59Z" name="Suite" finished-at="2021-08-02T02:29:19Z" duration-ms="200138">
    <groups>
      <group name="smoke">
        <method signature="CheckBoxTest.getToCheckBoxPage()[pri:0, instance:tests.CheckBoxTest@5bd1ceca]" name="getToCheckBoxPage" class="tests.CheckBoxTest"/>
        <method signature="TextBoxTest.getTextBoxPage()[pri:0, instance:tests.TextBoxTest@6c4f9535]" name="getTextBoxPage" class="tests.TextBoxTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2021-08-02T02:25:59Z" name="SmokeTest" finished-at="2021-08-02T02:27:28Z" duration-ms="89059">
      <class name="tests.TextBoxTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:tests.TextBoxTest@6c4f9535]" started-at="2021-08-02T02:25:59Z" name="beforeTest" finished-at="2021-08-02T02:26:47Z" duration-ms="48187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="getTextBoxPage()[pri:0, instance:tests.TextBoxTest@6c4f9535]" started-at="2021-08-02T02:26:47Z" name="getTextBoxPage" finished-at="2021-08-02T02:27:17Z" duration-ms="30367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTextBoxPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.TextBoxTest@6c4f9535]" started-at="2021-08-02T02:27:17Z" name="getResult" finished-at="2021-08-02T02:27:17Z" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTextBoxPage status=SUCCESS method=TextBoxTest.getTextBoxPage()[pri:0, instance:tests.TextBoxTest@6c4f9535] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TextBoxTest@6c4f9535]" started-at="2021-08-02T02:27:25Z" name="afterTest" finished-at="2021-08-02T02:27:28Z" duration-ms="2350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.TextBoxTest -->
      <class name="tests.CheckBoxTest">
        <test-method signature="getToCheckBoxPage()[pri:0, instance:tests.CheckBoxTest@5bd1ceca]" started-at="2021-08-02T02:27:17Z" name="getToCheckBoxPage" finished-at="2021-08-02T02:27:25Z" duration-ms="8103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToCheckBoxPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.CheckBoxTest@5bd1ceca]" started-at="2021-08-02T02:27:25Z" name="getResult" finished-at="2021-08-02T02:27:25Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getToCheckBoxPage status=SUCCESS method=CheckBoxTest.getToCheckBoxPage()[pri:0, instance:tests.CheckBoxTest@5bd1ceca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.CheckBoxTest -->
    </test> <!-- SmokeTest -->
    <test started-at="2021-08-02T02:27:28Z" name="RegressionTest" finished-at="2021-08-02T02:29:19Z" duration-ms="110209">
      <class name="tests.BookStoreLoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.BookStoreLoginTest@31c269fd]" started-at="2021-08-02T02:25:58Z" name="setup" finished-at="2021-08-02T02:25:59Z" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:tests.BookStoreLoginTest@31c269fd]" started-at="2021-08-02T02:27:28Z" name="beforeTest" finished-at="2021-08-02T02:27:41Z" duration-ms="12998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="goToBookStoreAppLoginPage()[pri:1, instance:tests.BookStoreLoginTest@31c269fd]" started-at="2021-08-02T02:28:22Z" name="goToBookStoreAppLoginPage" finished-at="2021-08-02T02:28:30Z" duration-ms="7327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToBookStoreAppLoginPage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.BookStoreLoginTest@31c269fd]" started-at="2021-08-02T02:28:30Z" name="getResult" finished-at="2021-08-02T02:28:30Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=goToBookStoreAppLoginPage status=SUCCESS method=BookStoreLoginTest.goToBookStoreAppLoginPage()[pri:1, instance:tests.BookStoreLoginTest@31c269fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.BookStoreLoginTest@31c269fd]" started-at="2021-08-02T02:29:17Z" name="afterTest" finished-at="2021-08-02T02:29:19Z" duration-ms="1900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.BookStoreLoginTest@31c269fd]" started-at="2021-08-02T02:29:19Z" name="tearDown" finished-at="2021-08-02T02:29:21Z" duration-ms="1265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.BookStoreLoginTest -->
      <class name="tests.AddAndDeleteBookFromCollectionTest">
        <test-method signature="addBook()[pri:2, instance:tests.AddAndDeleteBookFromCollectionTest@372b0d86]" started-at="2021-08-02T02:28:30Z" name="addBook" finished-at="2021-08-02T02:29:13Z" duration-ms="43520" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for alert to be present (tried for 40 second(s) with 500 milliseconds interval)
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-9SGE8AP', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 93.0.4577.18, chrome: {chromedriverVersion: 93.0.4577.15 (660fc11082ba5..., userDataDir: C:\Users\Lenovo\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53372}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 62d16438a86520fd9934e32a03b535e0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for alert to be present (tried for 40 second(s) with 500 milliseconds interval)
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'DESKTOP-9SGE8AP', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 93.0.4577.18, chrome: {chromedriverVersion: 93.0.4577.15 (660fc11082ba5..., userDataDir: C:\Users\Lenovo\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:53372}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 62d16438a86520fd9934e32a03b535e0
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:81)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
at tests.AddAndDeleteBookFromCollectionTest.addBook(AddAndDeleteBookFromCollectionTest.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBook -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.AddAndDeleteBookFromCollectionTest@372b0d86]" started-at="2021-08-02T02:29:13Z" name="getResult" finished-at="2021-08-02T02:29:15Z" duration-ms="1547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBook status=FAILURE method=AddAndDeleteBookFromCollectionTest.addBook()[pri:2, instance:tests.AddAndDeleteBookFromCollectionTest@372b0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="deleteBookFromProfile()[pri:3, instance:tests.AddAndDeleteBookFromCollectionTest@372b0d86]" started-at="2021-08-02T02:29:15Z" name="deleteBookFromProfile" finished-at="2021-08-02T02:29:17Z" duration-ms="2117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBookFromProfile -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.AddAndDeleteBookFromCollectionTest@372b0d86]" started-at="2021-08-02T02:29:17Z" name="getResult" finished-at="2021-08-02T02:29:17Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteBookFromProfile status=SUCCESS method=AddAndDeleteBookFromCollectionTest.deleteBookFromProfile()[pri:3, instance:tests.AddAndDeleteBookFromCollectionTest@372b0d86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.AddAndDeleteBookFromCollectionTest -->
      <class name="tests.VerifyLoginTest">
        <test-method signature="verifyLoginWithNoOfUsers(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyLoginTest@47747fb9]" started-at="2021-08-02T02:27:42Z" name="verifyLoginWithNoOfUsers" data-provider="logindata-fromcsv" finished-at="2021-08-02T02:28:06Z" duration-ms="23801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[joybutta]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Joybutta@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithNoOfUsers -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginTest@47747fb9]" started-at="2021-08-02T02:28:06Z" name="getResult" finished-at="2021-08-02T02:28:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithNoOfUsers status=SUCCESS method=VerifyLoginTest.verifyLoginWithNoOfUsers(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyLoginTest@47747fb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyLoginWithNoOfUsers(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyLoginTest@47747fb9]" started-at="2021-08-02T02:28:06Z" name="verifyLoginWithNoOfUsers" data-provider="logindata-fromcsv" finished-at="2021-08-02T02:28:16Z" duration-ms="10768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sam@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithNoOfUsers -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginTest@47747fb9]" started-at="2021-08-02T02:28:16Z" name="getResult" finished-at="2021-08-02T02:28:16Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithNoOfUsers status=SUCCESS method=VerifyLoginTest.verifyLoginWithNoOfUsers(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyLoginTest@47747fb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="verifyLoginWithNoOfUsers(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyLoginTest@47747fb9]" started-at="2021-08-02T02:28:16Z" name="verifyLoginWithNoOfUsers" data-provider="logindata-fromcsv" finished-at="2021-08-02T02:28:22Z" duration-ms="5926" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ritu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ritu@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithNoOfUsers -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.VerifyLoginTest@47747fb9]" started-at="2021-08-02T02:28:22Z" name="getResult" finished-at="2021-08-02T02:28:22Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithNoOfUsers status=SUCCESS method=VerifyLoginTest.verifyLoginWithNoOfUsers(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.VerifyLoginTest@47747fb9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.VerifyLoginTest -->
    </test> <!-- RegressionTest -->
  </suite> <!-- Suite -->
</testng-results>
